<%= gather_form_for(group, url: group.new_record? ? groups_groups_path : groups_group_path(group)) do |f| %>
  <%= f.input(:name, maxlength: Groups::Group.columns_hash["name"].limit) %>
  <% if @community_options %>
    <%= f.input(:communities) do %>
      <% @community_options.each do |community| %>
        <div class="checkbox">
          <label>
            <%= check_box_tag("groups_group[community_ids][]", community.id,
                  group.communities.include?(community)) %>
            <%= community.name %>
          </label>
        </div>
      <% end %>
    <% end %>
  <% end %>
  <%= f.input(:description, as: :text, maxlength: Groups::Group.columns_hash["description"].limit) %>
  <%= f.input(:kind, collection: Groups::Group::KINDS, include_blank: false) %>
  <%= f.input(:availability, collection: Groups::Group::AVAILABILITIES, include_blank: false) %>
  <%= nested_field_set(f, :memberships, single_row: true, inner_labels: false) %>

  <% if policy(group).change_permissions? %>
    <%= f.input(:can_request_jobs) %>
    <%= f.input(:can_administer_email_lists) %>
    <%= f.input(:can_moderate_email_lists) %>
  <% end %>

  <% if policy(group).edit_list? %>
    <h2>Email List</h2>

    <% if @domain_options.empty? %>
      You can't create an email list because there are no domains associated with this community.
      <a href="mailto:info@gather.coop">Contact Gather staff</a> to rectify this.
    <% else %>
      <%= f.simple_fields_for(:mailman_list) do |list_form| %>
        <p>
          Email lists are provided through the Mailman mailing list software. Leave these fields blank if you don't
          need an email list for this group.
        </p>

        <%= list_form.input(:address) do %>
          <%= list_form.input(:name, label: false) %>
          <span><strong>&nbsp;@&nbsp;</strong></span>
          <%= list_form.input(:domain_id, collection: @domain_options, label: false) %>
        <% end %>
        <%= list_form.input(:managers_can_administer) %>
        <%= list_form.input(:managers_can_moderate) %>
        <%= list_form.input(:_destroy, as: :boolean) if list_form.object.persisted? %>
      <% end %>
    <% end %>
  <% end %>

  <%= form_actions do %>
    <%= f.button :primary %>
  <% end %>
<% end %>

<%= javascript_tag do %>
  $(function() {
    new Gather.Views.Groups.GroupFormView({el: '.groups--group-form'});
    new Gather.Views.DirtyChecker({el: '.groups--group-form'});
    new Gather.Views.AjaxSelect2({
      el: '.groups--group-form',
      extraData: function() {
        // Get an array of selected community IDs
        return $("[name='groups_group[community_ids][]']:checked")
          .map(function() { return this.value; }).get();
      }
    });
  });
<% end %>
