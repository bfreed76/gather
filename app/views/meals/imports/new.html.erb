<% content_for(:title, "Import Meals") %>

<p>
  You can import meals using CSV format. Spreadsheet applications like Excel or Google Spreadsheets
  can export to CSV format, which you can then import to Gather.
  Construct your imort file using the following columns:
</p>

<table class="key-value">
  <tr>
    <td>Date/Time</td>
    <td>Required. The date and time of the meal. Use an unambiguous format like YYYY-MM-DD HH:MM</td>
  </tr>
  <tr>
    <td>Locations</td>
    <td>
      Required. The location(s) of the meal.
      Use exact names or numeric IDs of resources from the
      <%= link_to("reservations system", reservations_resources_path) %>.
    </td>
  </tr>
  <tr>
    <td>Formula</td>
    <td>
      Optional. The <%= link_to("formula", meals_formulas_path) %> for the meal.
      Use the exact formula name or numeric ID.
      Defaults to the default formula if not given.
    </td>
  </tr>
  <% if multi_community? %>
    <tr>
      <td>Communities</td>
      <td>
        Optional. Which communities are invited to the meal. Use exact names, abbreviations,
        or numeric IDs, separated by semicolons. Defaults to all communities if not given.
      </td>
    </tr>
  <% end %>
  <tr>
    <td>&lt;<em>Role Name</em>&gt; or Role&lt;<em>Role ID</em>&gt;</td>
    <td>
      Optional. Specify workers for the meal by adding one
      column per <%= link_to("meal role", meals_roles_path) %>.
      Use exact worker names or numeric IDs separated by semicolons.
    </td>
  </tr>
  <tr>
    <td>Action</td>
    <td>
      Optional. Specify 'create', 'update', or 'destroy'. Defaults to 'create' if not given.
      If 'update' or 'destroy' is given, matches meal based on ID if given,
      or date/time and locations otherwise.
    </td>
  </tr>
  <tr>
    <td>ID</td>
    <td>
      Optional. The ID of the meal to update/destroy. Ignored if action is 'create'.
    </td>
  </tr>
</table>

<p>Example:</p>

<table>
  <thead>
    <tr>
      <td>Date/Time</td>
      <td>Locations</td>
      <td>Formula</td>
      <% if @roles[0] %>
        <td><%= @roles[0].title %></td>
      <% end %>
      <% if @roles[1] %>
        <td>Role<%= @roles[1].id %></td>
      <% end %>
    </tr>
  </thead>
  <tbody>
    <tr>
      <td><%= @sample_times[0] %></td>
      <td><%= @locations.map(&:name).join("; ") %></td>
      <td><%= @formula.name %></td>
      <% if @roles[0] %>
        <td>Sally Jones</td>
      <% end %>
      <% if @roles[1] %>
        <td>Mohammed Iris; Sundar Premji</td>
      <% end %>
    </tr>
    <tr>
      <td><%= @sample_times[1] %></td>
      <td><%= @locations.map(&:id).join("; ") %></td>
      <td><%= @formula.id %></td>
      <% if @roles[0] %>
        <td>Li Yun</td>
      <% end %>
      <% if @roles[1] %>
        <td>Tamika Johnson; Silvia Rodriguez</td>
      <% end %>
    </tr>
  </tbody>
</table>

<div id="import-forms">
  <%= render("shared/dropzone", obj: @import, attrib: :file, width: 150, height: 150) %>
  <%= gather_form_for(@import, width: :full) do |f| %>
    <%= f.hidden_field :file_new_signed_id %>
    <%= f.hidden_field :file_destroy %>
    <%= f.button :primary %>
  <% end %>
</div>

<%= javascript_tag do %>
  $(function() {
    window.uploadView = new Gather.Views.FileUploadView(<%=json(el: '#import-forms', attrib: 'file')%>);
    new Gather.Views.DirtyChecker({el: '.user-form', helpers: [uploadView]});
    new Gather.Views.UserFormView({el: '.user-form'});
  });
<% end %>
