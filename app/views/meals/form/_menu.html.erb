<%= meal.form_section(:menu, expanded: local_assigns[:expanded]) do %>
  <% ([:title] + Meal::MENU_ITEMS).each do |attrib| %>
    <% if policy(meal).change_menu? %>
      <%= f.input attrib, as: (:markdown unless attrib == :title) %>
    <% else %>
      <%= f.input attrib do %><%= (a = f.object[attrib]) ? a : "[None]" %><% end %>
    <% end %>
  <% end %>

  <div class="form-group text optional meal_allergens
    <%= meal.errors[:allergens].present? ? "has-error" : "" %>">
    <label class="text optional col-sm-3 control-label" for="meal_allergens">Allergens</label>
    <%# PhantomJS doesn't handle column CSS very well so we need to set height manually in tests. %>
    <div class="boxes col-sm-9" <% if Rails.env.test? %>style="height: 200px"<% end %>>
      <% meal.allergen_options.each do |allergen| %>
        <div>
          <%= label_tag do %>
            <%= check_box_tag("meal[allergens][]", allergen, meal.allergen?(allergen),
                  disabled: !policy(meal).change_menu?) %>
            <%= allergen %>
          <% end %>
        </div>
      <% end %>
      <div>
        <%= f.check_box(:no_allergens, disabled: !policy(meal).change_menu?) %>
        <%= f.label(:no_allergens) %>
      </div>
    </div>
    <% if meal.errors[:allergens].present? %>
      <div class="error col-sm-9 col-sm-offset-3"><%= meal.errors[:allergens].join %></div>
    <% end %>
  </div>
<% end %>
